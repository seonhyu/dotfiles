# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
#set -g default-terminal screen-256color

# screen-256color인 경우 원격에서 인식하지 못한다.
set -g default-terminal screen-256color

unbind-key C-b
set -g prefix C-f

bind-key C-f last-pane
bind-key C-j last-window

set-option -g default-command "reattach-to-user-namespace -l $SHELL"
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind p run "tmux paste-buffer"

# Pane {{{
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Pane간 이동
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# }}}
# Window {{{
# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g main-pane-height 50
set-window-option -g main-pane-width 100
#set-window-option -g allow-rename off
# }}}
# Peformance {{{
# No escape time for vi mode
set -sg escape-time 0
# }}}
# Do it quickly {{{
# reload tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded."

# Keep your finger on ctrl, or don't
bind-key ^D detach-client
#
# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off
# }}}
# Mouse {{{
set -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on
# }}}
# Visual {{{
set -g status-bg black
set -g status-fg colour250
set -g window-status-format '#I:#W'
set -g window-status-current-bg red
set -g window-status-current-format '#[fg=white]#I:#W'
set -g status-right '[%Y-%m-%d %R]'
set -g pane-border-fg cyan
set -g pane-active-border-fg red
set-option -g status-justify centre
set -g automatic-rename off
# }}}

# Use vi keybindings for tmux commandline input.
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-selection

# Bigger history
set -g history-limit 3000


#===========================================
# yadr tmux.conf 기반. 나의 설정 추가.
#===========================================
set -g utf8 on

# C-b인 prefix 키를 C-v로 변경한다. b는 너무 멀어.
#unbind C-b
#set -g prefix C-v

# o 키가 pane(패널)간 전환인데 자꾸 Ctrl키가 함께 눌려진다.
# 그래서 pane 위치를 변경하는 C-o를 꺼버린다.
unbind C-o

unbind %

# move tmux copy buffer into x clipboard
bind-key y run-shell "reattach-to-user-namespace -l zsh -c 'tmux show-buffer| pbcopy'" \; display-message "Copied to clipboard."

# vim:foldmethod=marker:foldlevel=0
