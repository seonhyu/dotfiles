# Ring the bell if any background window rang a bell
set -g bell-action any

# screen-256color인 경우 원격에서 인식하지 못한다.
# color가 정확하지 않다.
set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",*-256color:Tc"

unbind-key C-b
set -g prefix C-f

bind-key C-f last-window

# 윈도우 기본 이름을 바꾸기 위한 트릭
bind-key c new-window -n 'new'
set-window-option -g automatic-rename off
set-window-option -g allow-rename off

# 이거 없으면 neovim에서 yarnk 할 때 'cliboard: error:' 발생한다.
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Pane {{{
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Pane간 이동
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# }}}
# Window {{{
# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g main-pane-height 50
set-window-option -g main-pane-width 100
# }}}
# Peformance {{{
# No escape time for vi mode
set -sg escape-time 0
# }}}
# Do it quickly {{{
# reload tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded."

# Keep your finger on ctrl, or don't
bind-key ^D detach-client
#
# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off
# }}}

######################
# Visual {{{         #
######################

# panes
#set -g pane-border-fg black
#set -g pane-active-border-fg red

# status line
set -g status-bg colour236
set -g status-fg colour244

set -g window-status-format ' #I:#W '
set -g window-status-current-format ' #I:#W '
set -g window-status-current-style bg=colour238
set -g status-right '[%Y-%m-%d %R]'
set-option -g status-justify centre
set -g automatic-rename off
# }}}

# Ver 2.1부터 mouse 설정이 바꼈다.
set -g mouse on

#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{pane_in_mode}' 'send-keys 1 k' 'copy-mode -e'"

bind-key -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{pane_in_mode}' 'send-keys 1 j'"
# better-mouse-mode plugin
# set -g @scroll-speed-num-lines-per-scroll "0.33"

# Use vi keybindings for tmux commandline input.
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"

#bind-key -t vi-copy WheelUpPane scroll-up
#bind-key -t vi-copy WheelDownPane scroll-down

# Bigger history
set -g history-limit 6000


#===========================================
# yadr tmux.conf 기반. 나의 설정 추가.
#===========================================

# o 키가 pane(패널)간 전환인데 자꾸 Ctrl키가 함께 눌려진다.
# 그래서 pane 위치를 변경하는 C-o를 꺼버린다.
unbind C-o

unbind %

#===========================================
# Plugins
#===========================================
# plugin manager
set -g @plugin 'tmux-plugins/tpm'
# session 저장/복원
set -g @plugin 'tmux-plugins/tmux-resurrect'
# 스크롤 속도 조절 위해서
# set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# conf 파일의 가장 아래에
run '~/.tmux/plugins/tpm/tpm'

# vim:foldmethod=marker:foldlevel=0
